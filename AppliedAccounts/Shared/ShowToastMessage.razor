@using AppliedAccounts.Services


@code {
    [Parameter] public ToastClass toastClass { get; set; }

    private void HideToast() { toastClass.ShowToast = false; }
    private void ShowToast(string message, string cssClass)
    {
        toastClass.Message = message;
        toastClass.CssClass = cssClass;
        toastClass.ShowToast = true;
        //StateHasChanged();

        // Hide toast after 3 seconds
        Task.Delay(3000).ContinueWith(_ =>
        {
            toastClass.ShowToast = false;
            InvokeAsync(StateHasChanged);
        });
    }
}

<div class="toast show @toastClass.GetLevel()" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">
            @toastClass.Message
        </div>
        <button type="button" class="btn-close me-2 m-auto" @onclick="HideToast"></button>
    </div>
</div>
