@layout HomeLayout
@using AppliedAccounts.Pages.Dashboard
@using AppliedAccounts.Data.ChartData
@using AppliedAccounts.Services
@inject NavigationManager NavManager
@inject AuthenticationStateProvider authStateProvider
@inject IJSRuntime js
@inject GlobalService AppGlobal
@using AppliedDB;

@code {

    public AppUserModel? AppUser { get; set; }
    public bool IsAdmin { get; set; } = false;
    private bool IsSidebarVisible { set; get; } = true;
    private bool _jsReady;

    protected override void OnInitialized()
    {
        if (AppGlobal.UserRole == "Administrator")
        {
            IsAdmin = true;
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _jsReady = true;
        }
    }

    private async Task Beep()
    {
        await js.InvokeVoidAsync("playBeep");
    }

    public async Task Logout()
    {

        var AppAuthState = (UserAuthenticationStateProvider)authStateProvider;
        await AppAuthState.UpdateAuthonticateState(null);
        NavManager.NavigateTo($"/", true);
    }

    private void SideBarClose()
    {
        IsSidebarVisible = !IsSidebarVisible;
    }

    public void Login() => NavManager.NavigateTo("/Users/Login");
    public void LogOut() => Task.Run(() => Logout());

    public async Task Home()
    {
        if (_jsReady)
        {
            Console.WriteLine("playBepp is ready yet.");
            await js.InvokeVoidAsync("playBeep");
            await Task.Delay(1500); // optional, gives time for beep
            NavManager.NavigateTo("/", true);
        }
        else
        {
            Console.WriteLine("JS not ready yet.");
        }
    }

    public void Inventory() { NavManager.NavigateTo($"/Menu/Stock", true); }
    public void Production() { NavManager.NavigateTo($"/Menu/Production", true); }
    public void Purchase() { NavManager.NavigateTo($"/Menu/MenuPurchase", true); }
    public void Payroll() { NavManager.NavigateTo($"/Menu/Payroll", true); }
    public void Taxation() { NavManager.NavigateTo($"/Menu/Taxation", true); }
    public void Admin() { NavManager.NavigateTo($"/Menu/Admin", true); }
    public void Config() { NavManager.NavigateTo($"/Config", true); }
    public void Accounts() { NavManager.NavigateTo($"/Menu/Accounts", true); }
    public void Sale() { NavManager.NavigateTo($"/Menu/Sale", true); }
    public void Import() { NavManager.NavigateTo($"/ImportCOA", true); }
}


@* <div class="container">
    <div class="row bg-light">
        <button class="btn btn-primary" @onclick="SideBarClose"><i class="bi bi-arrow-bar-left"></i></button>

    </div>
</div> *@


@if (IsSidebarVisible)
{
    <div class="sidebar">
        

        <div class="menus">
            <button type="submit" id="btn-Home" class="btn-Menu" @onclick="Home">Home</button>

            <AuthorizeView>
                <Authorized>


                    @if (AppGlobal.UserID == "CDC")
                    {
                        <CDCMenu></CDCMenu>
                    }
                    else
                    {
                        <button type="submit" class="btn-Menu" id="btn-account" @onclick="async () => { await Beep(); Accounts(); }">Accounts</button>
                        <button type="submit" class="btn-Menu" id="btn-Sale" @onclick="Sale">Sale</button>
                        <button type="submit" class="btn-Menu" id="btn-Purchase" @onclick="Purchase">Purchase</button>
                        <button type="submit" class="btn-Menu" id="btn-Stock" @onclick="Inventory">Stock</button>
                        <button type="submit" class="btn-Menu" id="btn-Production" @onclick="Production">Production</button>
                        <button type="submit" class="btn-Menu" id="btn-Payroll" @onclick="Payroll">Payroll</button>
                        <button type="submit" class="btn-Menu" id="btn-Taxation" @onclick="Taxation">Taxation</button>
                        <button type="submit" class="btn-Menu" id="btn-Admin" @onclick="Admin">Admin</button>
                    }

                    @if (IsAdmin)
                    {
                        <button type="submit" class="btn-Menu" id="btn-config" @onclick="Config">Config</button>
                        <button type="submit" class="btn-Menu" id="btn-import" @onclick="Import">Import</button>
                    }

                    <button type="submit" class="btn-Menu" id="btn-logout" @onclick="LogOut">Logout</button>

                </Authorized>
                <NotAuthorized>
                    <button type="submit" id="btn-login" class="btn-Menu" @onclick="Login">Login</button>
                </NotAuthorized>
                <Authorizing>
                    <div class="alert alert-info p-2 m-2">
                        <h5>Wait. Page Loading...</h5>
                    </div>
                </Authorizing>
            </AuthorizeView>
        </div>
    </div>
}


<div class="main-content">
    @if (AppUser?.UserID == "CDC")
    {
        <HomeDBoard></HomeDBoard>
    }
</div>

@if (AppUser?.UserID == "CDC")
{
    <HomeDBoard></HomeDBoard>
}




