@layout HomeLayout
@using AppliedAccounts.Pages.Dashboard
@using AppliedAccounts.Data.ChartData
@using AppliedAccounts.Services
@inject NavigationManager NavManager
@inject AuthenticationStateProvider authStateProvider
@inject IJSRuntime js
@inject GlobalService AppGlobal
@using AppliedDB;
@using Menus;

@code {

    public AppUserModel? AppUser { get; set; }
    public bool IsAdmin { get; set; } = false;
    private bool IsSidebarVisible { set; get; } = true;
    private bool _jsReady;
    private MenusClass AppMenuClass = new();

    protected override void OnInitialized()
    {

        if (AppGlobal.UserRole == "Administrator")
        {
            IsAdmin = true;
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Task.Delay(100);
        if (firstRender)
        {
            _jsReady = true;
        }
    }

    private async Task Beep()
    {
        await js.InvokeVoidAsync("playBeep");
    }

    public async Task Logout()
    {

        var AppAuthState = (UserAuthenticationStateProvider)authStateProvider;
        await AppAuthState.UpdateAuthonticateState(null);
        NavManager.NavigateTo($"/", true);
    }

    private void SideBarClose()
    {
        IsSidebarVisible = !IsSidebarVisible;
    }

    public void Login() => NavManager.NavigateTo("/Users/Login");
    public void LogOut() => Task.Run(() => Logout());

    public async Task Home()
    {
        if (_jsReady)
        {
            Console.WriteLine("playBepp is ready yet.");
            await js.InvokeVoidAsync("playBeep");
            await Task.Delay(1500); // optional, gives time for beep
            NavManager.NavigateTo("/", true);
        }
        else
        {
            Console.WriteLine("JS not ready yet.");
        }
    }

    public void Inventory() { NavManager.NavigateTo($"/Menu/Stock", true); }
    public void Production() { NavManager.NavigateTo($"/Menu/Production", true); }
    public void Purchase() { NavManager.NavigateTo($"/Menu/MenuPurchase", true); }
    public void Payroll() { NavManager.NavigateTo($"/Menu/Payroll", true); }
    public void Taxation() { NavManager.NavigateTo($"/Menu/Taxation", true); }
    public void Admin() { NavManager.NavigateTo($"/Menu/Admin", true); }
    public void Config() { NavManager.NavigateTo($"/Config", true); }
    public void Accounts() { NavManager.NavigateTo($"/Menu/Accounts", true); }
    public void Sale() { NavManager.NavigateTo($"/Menu/Sale", true); }
    public void Import() { NavManager.NavigateTo($"/ImportCOA", true); }


    public void MenuClick(string _NavTo)
    {
        NavManager.NavigateTo(_NavTo);
    }


    public int TopLevelActive = 0;

    public void TopLevelClick(int _ParentID)
    {
        TopLevelActive = _ParentID;
        StateHasChanged();
    }
}

<style>
    .sidebar {
        min-width: var(--sidebarMin_Width);
        max-width: var(--sidebarMax_Width);
    }

    .mw {
        min-width: var(--sidebarMnu_Width);
        max-width: var(--sidebarMnu_Width);
    }

    .ml {
        margin-left:5px;
        background-color:antiquewhite;
    }
</style>


<EditForm Model="AppMenuClass.MyMenus">
@if (IsSidebarVisible)
{
    <div class="sidebar">
        <div class="menus">
            @if (AppGlobal.UserID == "CDC")
            {
                <CDCMenu></CDCMenu>
            }
            else
            {
                foreach (var Menu in AppMenuClass.GetTopLevel())
                {
                    <button type="submit" class="btn-Menu mw" style="display:block;" id="btn-TopLevel" @onclick="async () => { await Beep(); TopLevelClick(Menu.ParentID); }">@Menu.Title</button>
                    foreach(var SubMenu in AppMenuClass.GetSubMenu(2,Menu.ID))
                    {
                        if(Menu.ID == TopLevelActive)
                        {
                            foreach(var SubMene in AppMenuClass.GetSubMenu(2, Menu.ID))
                            {
                                <button type="submit" class="btn-Menu mw ml" id="btn-Level2" @onclick="async () => { await Beep(); TopLevelClick(Menu.ParentID); }">@SubMenu.Title</button>
                            }
                       }
                    }
                }
            }
            
        </div>
    </div>
}
</EditForm>


<div class="main-content">
    @if (AppUser?.UserID == "CDC")
    {
        <HomeDBoard></HomeDBoard>
    }
</div>


