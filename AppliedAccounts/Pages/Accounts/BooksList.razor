@layout PageLayout;
@page "/Accounts/BooksList"; 
@attribute [Authorize];
@using AppliedAccounts.Libs;
@using AppliedAccounts.Models;
@using AppliedAccounts.Data;
@using AppliedDB
@using System.Data

@inject AuthenticationStateProvider authorized;
@inject NavigationManager NavManager;
@inject IJSRuntime js


@code {

    private int BookId = 0;
    private int BookNatureId = 1;

    private string BookTitle = "Book Title";
    private string NatureTitle = "Book Title";

    private string UserRoll;
    private string DateFormat = Format.DDMMYY;
    private string CurrFormat = Format.Currency;
    private decimal Tot_DR = 0.0M;
    private decimal Tot_CR = 0.0M;


    protected override void OnInitialized()
    {
        UserProfile = ((UserAuthonticationStateProvider)authorized).AppUser;
        MyModel.Source = new(UserProfile);
        BookId = MyModel.Source.GetBookAccounts(BookNatureId).First()?.ID ?? 0;
        //if (BookList == null || BookList.Count == 0) { BookList = MyModel.Source.GetBookAccounts(1); }

      

    }


    private Dictionary<int, string> items = new()
    {
        { 1, "Cash" },
        { 2, "Bank" },
    };


    private void BookNatureChanged(int _NatureID)
    {
        BookNatureId = _NatureID;
        BookId = MyModel.Source.GetBookAccounts(BookNatureId).First()?.ID ?? 0;
    }

    private void BookListChanged(int _BookID)
    {
        BookId = _BookID; //result;
        BookRecords = LoadBookRecords(BookId);

    }


}

<div class="PageHeading">
    <h2>@BookTitle</h2>
</div>

@* 
ValueChanged="@((e) => BookNatureChanged(e))"
ValueChanged="@((e) => BookListChanged(e))"
 *@

<EditForm Model="@MyModel">
    <div class="d-flex flex-row mb-3 filter">
        <div class="p-2">
            <InputSelect id="ddBook" class="item-height"
                         TValue="int"
                         Value="@BookNatureId"
                         ValueExpression="@(() => BookNatureId)"
                         ValueChanged="@((e) => BookNatureChanged(e))">

                @foreach (var item in items)
                {
                    <option value="@item.Key">@item.Value</option>
                }

            </InputSelect>
        </div>
        <div class="p-2">
            <InputSelect id="ddBook" class="item-height"
                         TValue="int"
                         Value="@BookId"
                         ValueExpression="@(()=> BookId)"
                         ValueChanged="@((e)=>BookListChanged(e))">

                @foreach (var item in MyModel.Source.GetBookAccounts(BookNatureId))
                {
                    <option value="@item.ID">@item.Title</option>
                }
            </InputSelect>
        </div>
        <div class="p-2">
            <InputDate id="dateStat" class="item-height" @bind-Value="DT_Start">

            </InputDate>
        </div>
        <div class="p-2">
            <InputDate id="dateStat" class="item-height" @bind-Value="DT_End">

            </InputDate>
        </div>
        <div class="p-2 search-btn">
            <label for="floatingInput">
                <InputText id="txtSearch" class="item-height" placeholder="Filter list"
                           @bind-Value="SearchText"
                           @onclick="Refresh">
                </InputText>
            </label>
        </div>
        <div class="p-2">
            <button type="submit" class="btn btn-refresh" @onclick="Refresh" title="Refresh"></button>
        </div>
        <div class="p-2">
            <button type="submit" class="btn btn-new" @onclick="New" title="New"></button>
        </div>
    </div>

    <div class="container">
        @if (BookRecords != null)
        {

            <table class="AppTable">
                <thead>
                    <tr>
                        <th>Voucher</th>
                        <th>Date</th>
                        <th>Description</th>
                        <th>Received</th>
                        <th>Paid</th>
                        <th>Balance</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (BookView Record in LoadBookRecords(BookId))
                    {
                        <tr>
                            <td>@Record.Vou_No</td>
                            <td>@Record.Vou_Date</td>
                            <td>@Record.Description</td>
                            <td class="amount">@Record.txtRecevied</td>
                            <td class="amount">@Record.txtPaid</td>
                            <td class="amount">@Record.txtBalance</td>
                        </tr>
                    }



                </tbody>
            </table>
        }
        else
        {

            <div class="container">
                <div class="row">
                    <div class="alert alert-warning" role="alert">
                        No records found
                    </div>

                </div>
                <div class="row">
                    <button type="submit" class="btn btn-primary" @onclick="New"></button>
                </div>
            </div>


        }
    </div>




</EditForm>