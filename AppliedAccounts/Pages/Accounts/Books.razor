@layout PageLayout;
@page "/Accounts/Books"
@attribute [Authorize];
@using AppliedAccounts.Libs;
@using AppliedAccounts.Models;
@using AppliedAccounts.Data;
@using AppliedDB
@using System.Data

@inject AuthenticationStateProvider authorized;
@inject NavigationManager NavManager;
@inject IJSRuntime js


@code {
    private int BookID = 0;
    private string BookTitle = "Book Title";
    private string NatureTitle = "Book Title";

    private string UserRoll;
    private string DateFormat = Format.DDMMYY;
    private string CurrFormat = Format.Currency;
    private decimal Tot_DR = 0.0M;
    private decimal Tot_CR = 0.0M;


    protected override void OnInitialized()
    {
        UserProfile = ((UserAuthonticationStateProvider)authorized).AppUser;
        MyModel.Source = new(UserProfile);
        if (BookList == null || BookList.Count == 0) { BookList = MyModel.Source.GetBookAccounts(1); }


    }

    private int BookNatureId = 1;
    private int BookId = 0;

    private Dictionary<int, string> items = new()
    {
        { 1, "Cash" },
        { 2, "Bank" },
    };

    private void BookNatureChanged(ChangeEventArgs e)
    {
        if (e.Value != null && int.TryParse(e.Value.ToString(), out int result))
        {
            BookNatureId = result;
        }
        else
        {
            Console.WriteLine("Invalid selection.");
        }
    }

    private void BookListChanged(ChangeEventArgs e)
    {
        if (e.Value != null && int.TryParse(e.Value.ToString(), out int result))
        {
            BookId = result;
        }
        else
        {
            Console.WriteLine("Invalid selection.");
        }
    }


}

<div class="PageHeading">
    <h2>@BookTitle</h2>
</div>

<EditForm Model="@MyModel">
    <div class="container">
        <div class="row filter">
            <div class="col-md-1">
                <div class="form-floating w1 ">
                    <InputSelect @bind-Value="BookNatureId" @onchange="BookNatureChanged" class="item-height">
                        <option value="0">Select..</option>
                        @foreach (var item in items)
                        {
                            <option value="@item.Key">@item.Value</option>
                        }
                    </InputSelect>

                </div>
            </div>
            <div class="col-md-2">
                <div class="form-floating">
                    <InputSelect @bind-Value="@BookID" @onchange="BookListChanged" class="item-height">

                        @foreach (var item in MyModel.Source.GetBookAccounts(BookNatureId))
                        {
                            <option value="@item.ID">@item.Title</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="col-md-2">
                <InputDate id="dateStat" class="item-height" @bind-Value="DT_Start">

                </InputDate>
            </div>
            <div class="col-md-2">
                <InputDate id="dateEnd" class="item-height" @bind-Value="DT_End">

                </InputDate>
            </div>

            @*  <div class="col-md-1">
                <label for="floatingInput"> <i class="bi bi-search"></i> </label>
            </div> *@


            <div class="col-md-2">
                <div class="form-floating mb-3">
                    <label for="floatingInput"> <i class="bi bi-search"></i> </label>
                    <InputText @bind-Value="SearchText" id="txtSearch" class="item-height" placeholder="Filter list">

                    </InputText>

                </div>
            </div>
        </div>

    </div>

    <div class="container">
        @if (BookRecords != null)
        {

        <table class="Table-list">
            <thead>
                <tr>
                    <th>Voucher</th>
                    <th>Date</th>
                    <th>Description</th>
                    <th>Received</th>
                    <th>Paid</th>
                    <th>Balance</th>
                </tr>
            </thead>
            <tbody>
                @foreach(BookRec Record in BookRecords)
                {
                    <tr>
                        <td>@Record.Vou_No</td>
                        <td>@Record.Vou_Date</td>
                        <td>@Record.Description</td>
                        <td>@Record.Recevied</td>
                        <td>@Record.Paid</td>
                        <td>@Record.Balance</td>
                    </tr>
                }


               
            </tbody>
        </table>
        }
        else
        {
            <div class="alert alert-warning" role="alert">
                No records found
            </div>
        }
    </div>




</EditForm>