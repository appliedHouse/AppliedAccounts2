@layout HomeLayout
@page "/"
@using AppliedAccounts.Services
@using AppliedGlobals
@using AppliedDB;
@using AppliedAccounts.Pages.HomePage

@attribute [AllowAnonymous];
@inject IJSRuntime js;
@inject AuthenticationStateProvider authStateProvider;
@inject GlobalService AppGlobal;


<PageTitle>Index</PageTitle>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AppAuthState { get; set; }
    private Task<AppUserModel>? UserProfile { get; set; }
    private AppUserModel? UserModel { get; set; }
    private string _Message = string.Empty;
    private AppliedDB.Connections _Conn = new();
    public string UserName { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if(AppAuthState.Result.User.Identity!.IsAuthenticated)
        {
            UserModel = ((UserAuthenticationStateProvider)authStateProvider).AppUser;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            
            await Create_Update_Database();
            await DisplayGreetingMessage();
        }
    }

    private async Task DisplayGreetingMessage()
    {

        if (AppAuthState != null)
        {
            await Task.Run(() =>
            {
                var authState = AppAuthState;
                UserName = AppAuthState.Result.User.Identity?.Name ?? "";
            });


        }
    }

    //Create or Update DataBase Tables.
    private async Task Create_Update_Database()
    {
        if (UserModel != null)
        {
            await Task.Run(() =>
            {
                _ = new CreateDatabase(AppGlobal.AppPaths);         
            });
        }
    }

}

<AuthorizeView>
    <Authorized>
        <header>
            <AppHeader />
        </header>
        <NavMenu />
        <HomePageAuthorized />
    </Authorized>
    <NotAuthorized>
        <HomePageNotAuthorized />
    </NotAuthorized>
    <Authorizing>
        <div class="alert alert-info" role="alert">
            <p>Wait......</p>
        </div>
    </Authorizing>
</AuthorizeView>
