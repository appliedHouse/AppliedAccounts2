@page "/ImportData/ImportSalesInvoice"
@using System.Data
@using AppliedDB
@attribute [Authorize];
@inject IJSRuntime JS;

@inject AuthenticationStateProvider authStateProvider;


@code {
    (decimal Tot_Qty, decimal Tot_Amount, decimal Tot_Tax, decimal Tot_Net) Totals;
    string ClientName = "Applied Software House";
    string Voucher = "Voucher No.";
    protected override void OnInitialized()
    {

        AppUser = ((UserAuthonticationStateProvider)authStateProvider).AppUser;
        Model = new();
        Model.DBFile = AppUser.DataFile;

    }






}






<EditForm Model="Model">


    @if (Model.ShowData)
    {
        <div class="container mt-1 mb-1">
            <div class="rowe">
                <div class="col">
                    <button id="btnPost" disabled="@ShowSpinner" class="btn btn-warning" @onclick="(()=>Post())">Post</button>
                </div>
            </div>
        </div>


        if (SalesData?.Rows.Count > 0)
        {
            <table class="AppTable">
                <thead>
                    <tr>
                        <th>Vou No</th>
                        <th>Vou Date</th>
                        <th>Company Name</th>
                        <th>Amount</th>
                        <th>...</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.SaleInvoiceList)
                    {
                        var _Date = ((DateTime)item["Vou_Date"]).ToString(Format.DDMMMYY);
                        var _Amount = ((decimal)item["Amount"]).ToString(Format.Digit);
                        int _ID = (int)item["ID"];

                        <tr>
                            <td>@item["Vou_No"]</td>
                            <td>@_Date</td>
                            <td>@item["Description"]</td>
                            <td class="amount-blue">@_Amount</td>
                            <td>
                                <button type="button" class="btn btn-link" @onclick="(()=>ShowInvoiceModol(_ID))">
                                    View
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
    else
    {
        <div class="container">
            <div class="row mt-2">
                @if (!IsExcelLoaded)
                {
                    <div class="col-8">
                        <InputFile id="inputFile" OnChange="GetExcelFile">Select Excel File</InputFile>
                    </div>
                }
                @if (IsExcelLoaded)
                {
                    <div class="col-2">
                        <button id="btnImport" disabled="@ShowSpinner" @onclick="(()=>GetImportedDataAsync())">Generate Invoices</button>
                    </div>
                }
                @if (ShowSpinner)
                {
                    <div class="col-2" disable="@ShowSpinner">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }

            </div>

        </div>
    }

    @if (Model.ShowMessages)
    {
        <textarea style="width:100%; height:auto">
            @MyMessage;
                            </textarea>
    }


</EditForm>


@* Bootstrap 5 Modol *@
<div class="modal fade" id="ModolSaleInvoice" tabindex="-1" aria-labelledby="ModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabel">@ClientName</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>@Voucher</p>

                @if (Model.SelectedSale != null && Model.SelectedSale.Count > 0)
                {
                    <table class="AppTable">
                        <thead class="tb-head">
                            <tr class="tb-head-row">
                                <th style="width:20%; text-align:left">Batch</th>
                                <th style="width:50%; text-align:left">Stock</th>
                                <th style="width:30%; text-align:right">Net Amount</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.SelectedSale)
                            {
                                <tr class="tb-body-row">
                                    <td>@item.Batch</td>
                                    <td>@item.Inventory</td>
                                    <td class="amount">@item.Amount.ToString(Format.Digit)</td>
                                </tr>
                                
                            }
                        </tbody>

                        <tfoot class="tb-foot">
                            <tr class="tb-foot-row">
                                <td></td>
                                <td>TOTAL</td>
                                <td class ="amount">@Totals.Tot_Net.ToString(Format.Digit)</td>
                            </tr>
                        </tfoot>

                    </table>
                }
                else
                {
                    <p>No Record....!</p>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn wd btn-primary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<style>
    .wd {
        width: 100px;
    }
</style>