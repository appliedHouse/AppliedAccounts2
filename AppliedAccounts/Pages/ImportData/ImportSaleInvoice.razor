@page "/ImportData/ImportSalesInvoice"

@attribute [Authorize]
@using System.Data
@using AppliedAccounts.Services
@using AppliedAccounts.Component
@using AppliedDB
@using Microsoft.AspNetCore.Components.Forms


@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavManager
@inject IJSRuntime js
@inject ToastService ToastService
@inject GlobalService AppGlobal
@inject PrintService ReportService


@code {
    (decimal Tot_Qty, decimal Tot_Amount, decimal Tot_Tax, decimal Tot_Net) Totals;
    string ClientName = "Applied Software House";
    string Voucher = "Voucher No.";


    protected override void OnInitialized()
    {
        Stopwatch.Start();
        MsgClass = new();
        Source = new(AppGlobal.AppPaths);
        
    }

    private async Task TriggerFileInput()
    {
        await js.InvokeVoidAsync("triggerFileUpload");
    }

    private async Task SaveMessage()
    {
        await js.InvokeVoidAsync("showModol", "modalSave");

    }
}

<style>
    .w1 {
        width: 200px;
    }
</style>


@if (MyModel.IsError)
{
    <div class="alert alert-danger" role="alert">
        @MyModel.ErrorMessage
    </div>
}
else
{
    <EditForm Model="MyModel">

        @if (ShowSpinner)
        {

            <div class="alert alert-info" role="alert">
                <div class="spinner-border text-warning" role="status">
                    <span class="visually-hidden">@MyModel.SpinnerMessage</span>
                </div>
                <p>@MyModel.SpinnerMessage</p>
                @if (ShowProgress)
                {
                    <div class="row justify-content-start">
                        <div class="col-6">

                            @if (MyModel.IsProgressBar)
                            {
                                <div class="progress bg-success progress-bar-striped progress-bar-animated">
                                    <div class="progress-bar" role="progressbar"
                                         style="width:@MyModel.BarPercent%"
                                         aria-valuenow="@MyModel.Counter"
                                         aria-valuemin="0"
                                         aria-valuemax="@MyModel.TotalRec">
                                        @MyModel.BarPercent.ToString("0.##")%
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                <p class="text-danger">This process may take some time, so please be patient.</p>
            </div>
        }



        @if (Step1)
        {
            <div class="container">
                <div class="d-flex flex-row mb-3">
                    <div class="p-2">
                        <button class="btn btn-primary w1" disabled="@(IsExcelLoaded ? true : ShowSpinner)"
                                title="Upload Excel file" @onclick="TriggerFileInput">
                            Upload Excel file
                        </button>
                        <InputFile id="inputFile" class="d-none" OnChange="GetExcelFile" />


                    </div>
                    <div class="p-2">
                        <label>@ExcelFileName</label>
                    </div>
                    @if (IsExcelLoaded)
                    {
                        <div class="p-2">
                            <label>Excel File has been loaded successfully.</label>
                        </div>
                    }

                </div>
            </div>
        }

        @if (Step2)
        {
            <div class="container mt-3">
                <div class="d-flex flex-column mb-3">
                    <div class="row">
                        <p>Excel file [@ExcelFileName] has been loaded successfully.</p>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" @bind-value="MyModel.IsClientUpdate" id="flexCheckChecked" checked>
                        <label class="form-check-label" for="flexCheckChecked">
                            Update Client Data
                        </label>
                    </div>

                    <div class="p-2">
                        <button class="btn btn-primary w1" id="btnImport" disabled="@ShowSpinner" @onclick="(()=>GetImportDataAsync())">Generate Invoices</button>
                    </div>

                </div>
            </div>
        }


        @if (Step3)
        {
            <div class="container p-2 m-2">
                <div class="row">
                    <button class="btn btn-warning" @onclick="SaveMessage">POST</button>
                </div>
            </div>
            <!-- Show Imported Sale Invoices Data-->
            if (SalesData?.Rows.Count > 0)
            {
                <div class="table-container" id="tableContainer">
                    <table class="table-list">
                        <thead>
                            <tr>
                                <th style="width:10%" class="tb-col-center">Vou No</th>
                                <th style="width:10%" class="tb-col-center">Vou Date</th>
                                <th style="width:10%" class="tb-col-center">Due Date</th>
                                <th style="width:10%" class="tb-col-center">Ref No.</th>
                                <th style="width:35%" class="tb-col-left">Company Name</th>
                                <th style="width:15%" class="tb-col-center">Amount</th>
                                <th style="width:10%" class="tb-col-center">View</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in MyModel.SaleInvoiceList)
                            {
                                var _IDate = ((DateTime)item["Vou_Date"]).ToString(Format.DDMMMYY);
                                var _PDate = ((DateTime)item["Pay_Date"]).ToString(Format.DDMMMYY);
                                var _Amount = ((decimal)item["Amount"]).ToString(Format.Digit);
                                int _ID = (int)item["ID"];

                                <tr class="tb-body-row">
                                    <td class="tb-col-Center">@item["Vou_No"]</td>
                                    <td class="tb-col-Center">@_IDate</td>
                                    <td class="tb-col-Center">@_PDate</td>
                                    <td class="tb-col-Center">@item["Ref_No"]</td>
                                    <td class="tb-col-left">@item["Description"]</td>
                                    <td class="amount-blue">@_Amount</td>
                                    <td>
                                        <button type="button" class="btn" @onclick="(()=>ShowInvoiceModal(_ID))">
                                            <i class="bi bi-stack-overflow"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        }

        @if (Step4)
        {
            <div class="alert alert-success" role="alert">
                <div class="d-flex">
                    <div class="p-2 flex-grow-1">Invoice Posting Log</div>
                    <div class="p-2">
                        <Btn_Back NavTo="/" />
                    </div>
                </div>
            </div>

            <div class="border rounded" style="max-height: 70vh; overflow-y: auto;">
                <ul class="list-group">
                    @foreach (var item in MsgClass.MessageList)
                    {
                        <li class="list-group-item">@item.MessageText</li>
                    }
                </ul>
            </div>
            <hr />
        }

    </EditForm>



    @* Bootstrap 5 Modol *@
    <div class="modal fade" id="ModolSaleInvoice" tabindex="-1" aria-labelledby="ModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ModalLabel">@ClientName</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-success" role="alert">
                        @Voucher
                    </div>

                    @if (MyModel.SelectedSale != null && MyModel.SelectedSale.Count > 0)
                    {
                        <table class="table-list">
                            <thead>
                                <tr>
                                    <th style="width:20%; text-align:left">SR #</th>
                                    <th style="width:50%; text-align:left">Stock</th>
                                    <th style="width:30%; text-align:right">Net Amount</th>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var item in MyModel.SelectedSale)
                                {
                                    <tr class="tb-body-row">
                                        <td class="tb-col-center">@item.SrNo</td>
                                        <td class="tb-col-left">@item.Inventory</td>
                                        <td class="amount">@item.Amount.ToString(Format.Digit)</td>
                                    </tr>

                                }
                            </tbody>

                            <tfoot>
                                <tr>
                                    <td></td>
                                    <td>TOTAL</td>
                                    <td class="amount">@Totals.Tot_Amount.ToString(Format.Digit)</td>
                                </tr>
                            </tfoot>

                        </table>
                    }
                    else
                    {
                        <p>No Record....!</p>
                    }

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn wd btn-primary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="modalSave" tabindex="-1" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="saveModallabel">Post Sale Invoice</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure to post all sales invocies...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="Post">Save changes</button>
            </div>
        </div>
    </div>
</div>