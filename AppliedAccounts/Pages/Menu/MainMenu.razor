@using Menus;
@inject IJSRuntime js
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthState

@code {
    [Parameter] public MenusClass MenuClass { get; set; }

    private bool SubMenu { get; set; } = false;
    private async Task Beep() { await js.InvokeVoidAsync("playBeep"); }
    private async Task MenuClick(int MenuID)
    {
        await js.InvokeVoidAsync("playBeep"); await Task.Delay(100);

        var _SelectedMnu = MenuClass.GetMenu(MenuID);
        if (_SelectedMnu == null) { return; }

        #region Logout User
        if (MenuID == (int)AppMenu.Logout)
        {
            var UserService = (UserAuthenticationStateProvider)AuthState;
            await UserService.UpdateAuthonticateState(null);
            NavManager.NavigateTo("/");
            return;
        }
        #endregion
        #region Home Button
        if (_SelectedMnu.Title.ToUpper().Equals("HOME"))
        {
            SubMenu = !SubMenu;
            MenuClass.HomeButton(SubMenu);
            return;
        }
        #endregion
        #region Menu button Clieck

        if (_SelectedMnu.Level == 1)
        {
            SubMenu = !SubMenu;
            // All top level menus and sub menu of the select
            MenuClass.TopSelected(_SelectedMnu, SubMenu);
        }
        if (_SelectedMnu.Level == 2)
        {
            MenuClass.SecondLevel(_SelectedMnu);
        }
        #endregion

        if(!string.IsNullOrEmpty(_SelectedMnu.NavigateTo))
        {
            NavManager.NavigateTo(_SelectedMnu.NavigateTo);
        }

    }


    protected override void OnInitialized()
    {
        MenuClass ??= new();
    }
}

<div class="sidebar">
    <div class="Menu mt-2">
        @foreach (var Menu in MenuClass.MyMenus)
        {
            if (Menu.Level == MenuClass.TopMenuLevel)
            {
                <button type="button" class="btn-Menu mw" id="btn-TopLevel" @onclick="async () => { await MenuClick(Menu.ID); }"><i class="@Menu.Icon"></i>  @Menu.Title</button>
            }

            if (Menu.Level == MenuClass.TopMenuLevel + 1)
            {
                <button type="button" class="btn-Menu subMenu" id="btn-SubMenu" @onclick="async () => { await MenuClick(Menu.ID); }"><i class="@Menu.Icon text-success"></i>  @Menu.Title</button>
            }
        }

    </div>
</div>
