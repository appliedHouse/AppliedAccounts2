@page "/Menu/Accounts"
@attribute [Authorize];

@using AppliedAccounts.Models;
@using AppliedAccounts.Services;
@using ExcelDataReader
@using System.Data

@inject NavigationManager NavManager;
@inject GlobalService AppGlobal;

@code {
    public MenuCardModel? CardMenuModel { get; set; }
    public string COAText = "A chart of accounts is a documents that list all the transactions.";
    public string ClassText = "Classification of accounts are groups of chart of accounts.";
    public string CategoryText = "Category of Accounts are gategory of charts of accounts";
    public string NotesText = "Notes to the financial Accounts.";
    public string ImportText = "Import an excel file and generate sales invoice";
    public string CashBookText = "Daily cash transactions.";
    public string BankBookText = "Daily bank transactions.";
    public string ReceiptText = "Receipts";
    public DataSet MyDataset = new();
    public bool IsWaiting { get; set; } = true;
    public string MyMessage = "Loading....";

    public bool IsAdmin { get; set; } = false;
    private bool IsSidebarVisible { set; get; } = true;

    protected override void OnInitialized()
    {
        if (AppGlobal.UserRole == "Administrator")
        {
            IsAdmin = true;
        }

        CardMenuModel = new() { TextMsg = "", NavTo = "", PicPath = "" };
    }

    public void LoadFiles() { NavManager.NavigateTo("/DownLoad"); }
    public void QuotationsList() { NavManager.NavigateTo("/Sale/QuotationsList"); }

    public void SetDataSet(DataSet? _DataSet)
    {
        int Count = 0;
        if (_DataSet is not null)
        {
            Count = _DataSet.Tables.Count;
        }
    }

    private async Task Migration()
    {

        AppliedAccounts.Data.DataMigration _MigrationClass = new(AppGlobal);
        MyMessage = "Migrating Cash Book Data...";
        await InvokeAsync(StateHasChanged);
        await Task.Run(() => _MigrationClass.Cash2Book());

    }
}

<style>
    .fixed-background {
        /*  background-image: url('/images/TypeWriter.jpg'); */
        background: no-repeat; /* Ensures the image fills the div */
        background-position: center; /* Centers the image */
        background-repeat: no-repeat; /* Prevents tiling */
        position: relative; /* Keeps the div positioned within the document flow */
        width: 100%; /* Set the div's width */
        height: 100vh; /* Set the div's height */
        overflow: hidden; /* Ensures content within the div stays visible */
    }
</style>


@if (IsSidebarVisible)
{
    <div class="sidebar">
        <div class="menus">

        </div>
    </div>
}
