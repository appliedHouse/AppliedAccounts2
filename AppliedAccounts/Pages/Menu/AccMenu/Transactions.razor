@using Menus
@inject IJSRuntime js
@inject NavigationManager NavManager

@code {
    [Parameter] public MenusClass MenuClass { get; set; } = new MenusClass();
    private async Task Beep() { await js.InvokeVoidAsync("playBeep"); }
    private int ActiveMenu { get; set; } = 0;
    private async Task TopLevelClick(int MenuID)
    {
        await Task.Delay(100);
        ActiveMenu = MenuID;
    }
    private async Task SubMenuClick(int MenuID)
    {
        NavManager.NavigateTo(MenuClass.MyMenus[MenuID].NavigateTo);
        await Task.Delay(100);
    }
}

<EditForm Model="MenuClass">
    <div class="sidebar">
        <div class="Menu mt-2">
            @foreach (var Menu in MenuClass.GetSubMenu(2, 22))
            {
                <button type="submit" class="btn-Menu mw" id="btn-TopLevel" @onclick="async () => { await Beep(); await TopLevelClick(Menu.ID); }"><i class="@Menu.Icon"></i>  @Menu.Title</button>
                @foreach (var SubMenu in MenuClass.GetSubMenu(3, Menu.ID))
                {
                    <button type="submit" class="btn-Menu subMenu" id="btn-SubMenu" @onclick="async () => { await Beep(); await SubMenuClick(SubMenu.ID); }"><i class="@Menu.Icon text-success"></i>  @SubMenu.Title</button>
                }
            }
        </div>
    </div>

</EditForm>
